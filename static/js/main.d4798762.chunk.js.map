{"version":3,"sources":["components/OffcanvasCard.module.css","store/recipeReducer.js","store/offCanvasReducer.js","store/index.js","components/Footer.jsx","components/Header.jsx","components/Mymappedarray.jsx","components/OffcanvasCard.jsx","API/Utils.js","API/recipes.js","components/MyCard.jsx","components/RecipesCarusel.jsx","components/MyButton.jsx","components/MyInput.jsx","components/Recipes.jsx","App.jsx","index.js"],"names":["module","exports","defaltState","recipes","recipesName","SHOW_RECIPES","GET_NAME_RECIPES","changeRecipesName","payload","type","showModal","modalContent","SHOW_MODAL","SET_MODAL_CONTENT","offCanvasAction","rootReducer","combineReducers","recipeReducer","state","action","offCanvasReducer","store","createStore","composeWithDevTools","applyMiddleware","thunk","Footer","style","textAlign","backgroundColor","padding","Header","Card","maxHeight","overflow","className","Image","src","alt","fluid","ImgOverlay","Title","fontSize","color","fontWeight","Text","Mymappedarray","array","label","Container","map","item","indexOf","OffcanvasCard","dispatch","useDispatch","offCanvas","useSelector","styles","card","active","Object","keys","length","container","recipe","image","maxWidth","Body","Row","calories","totalWeight","dietLabels","dishType","healthLabels","ingredientLines","mealType","Button","variant","margin","onClick","Utils","clearArrFromDuplicate","arr","reduce","uniques","item02","JSON","stringify","includes","obj","parse","checkStatus","response","status","error","Error","statusText","parseJSON","json","fetchJSON","url","fetch","then","MyCard","changeModal","alignItems","ingredients","ingredient","text","RecipesCarusel","Carousel","Item","MyButton","buttonText","buttonHandle","argument","ButtonGroup","MyInput","inputName","value","inputHandle","InputGroup","size","id","FormControl","onChange","e","Recipes","getRecipes","useCallback","name","data","console","log","hits","changeRecipes","preventDefault","target","Col","lg","md","sm","xs","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d4798762.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"OffcanvasCard_card__m66-Z\",\"active\":\"OffcanvasCard_active__26ccI\",\"container\":\"OffcanvasCard_container__2_3RY\"};","const defaltState = {\r\n  recipes: [],\r\n  recipesName: '',\r\n}\r\n\r\nconst SHOW_RECIPES = 'SHOW_RECIPES'\r\nconst GET_NAME_RECIPES = 'GET_NAME_RECIPES'\r\n\r\nexport const recipeReducer = (state = defaltState, action) => {\r\n  switch (action.type) {\r\n    case SHOW_RECIPES:\r\n      return { ...state, recipes: [...action.payload] }\r\n\r\n    case GET_NAME_RECIPES:\r\n      return { ...state, recipesName: action.payload }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const showRecipesAction = (payload) => ({ type: SHOW_RECIPES, payload })\r\nexport const changeRecipesName = (payload) => ({\r\n  type: GET_NAME_RECIPES,\r\n  payload,\r\n})\r\n","const defaltState = {\r\n  showModal: false,\r\n  modalContent: {},\r\n}\r\n\r\nconst SHOW_MODAL = 'SHOW_MODAL'\r\nconst SET_MODAL_CONTENT = 'SET_MODAL_CONTENT'\r\n\r\nexport const offCanvasReducer = (state = defaltState, action) => {\r\n  switch (action.type) {\r\n    case SHOW_MODAL:\r\n      return { ...state, showModal: state.showModal ? false : true }\r\n\r\n    case SET_MODAL_CONTENT:\r\n      return { ...state, modalContent: action.payload }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const offCanvasAction = (payload) => ({ type: SHOW_MODAL, payload })\r\nexport const setModalAction = (payload) => ({\r\n  type: SET_MODAL_CONTENT,\r\n  payload,\r\n})\r\n","import { applyMiddleware, combineReducers, createStore } from 'redux'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport thunk from 'redux-thunk'\r\nimport { recipeReducer } from './recipeReducer'\r\nimport { offCanvasReducer } from './offCanvasReducer'\r\n\r\nconst rootReducer = combineReducers({\r\n  recipeReducer,\r\n  offCanvasReducer,\r\n})\r\n\r\nexport const store = createStore(\r\n  rootReducer,\r\n  composeWithDevTools(applyMiddleware(thunk))\r\n)\r\n","import React from \"react\";\r\n\r\nexport default function Footer() {\r\n  return (\r\n    <div\r\n      style={{\r\n        textAlign: \"center\",\r\n        backgroundColor: \"#8B4513\",\r\n        padding: \"50px\",\r\n      }}\r\n    >\r\n      <h2>This is footer</h2>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react'\r\nimport { Card, Image } from 'react-bootstrap'\r\n\r\nexport default function Header() {\r\n   return (\r\n      <Card style={{maxHeight: '400px', overflow: 'hidden'}}  className=\" bg-dark text-white \">\r\n      <Image src=\"https://www.gordonramsayrestaurants.com/assets/Uploads/_resampled/CroppedFocusedImage79040049-30-vb1561781-Restaurant-Gordon-Ramsay-017-AS-1-.jpg\" alt=\"Card image\" fluid />\r\n      <Card.ImgOverlay className=\"p-sm-1 p-md-3 p-lg-4 p-xl-5 text-center\">\r\n        <Card.Title style={{fontSize: '35px', color: '#DAA520', fontWeight: 'bold'}} >Find your favorite recipe</Card.Title>\r\n        <Card.Text>\r\n          This is a wider card with supporting text below as a natural lead-in to\r\n          additional content. This content is a little bit longer.\r\n        </Card.Text>\r\n        <Card.Text>Last updated 3 mins ago</Card.Text>\r\n      </Card.ImgOverlay>\r\n    </Card>\r\n   )\r\n}\r\n","import React from \"react\";\r\nimport { Container } from \"react-bootstrap\";\r\n\r\nexport default function Mymappedarray({ array, label }) {\r\n  return (\r\n    <Container style={{ textAlign: \"center\" }}>\r\n      <h3>{label}</h3>\r\n      {array.map((item) => (\r\n        <div key={array.indexOf(item)}>{item}</div>\r\n      ))}\r\n    </Container>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Card, Button, Image, Container, Row } from \"react-bootstrap\";\r\nimport styles from \"./OffcanvasCard.module.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { offCanvasAction } from \"../store/offCanvasReducer\";\r\nimport Mymappedarray from \"./Mymappedarray\";\r\n\r\nexport default function OffcanvasCard() {\r\n  const dispatch = useDispatch();\r\n  const offCanvas = useSelector((state) => state.offCanvasReducer.showModal);\r\n  const modalContent = useSelector(\r\n    (state) => state.offCanvasReducer.modalContent\r\n  );\r\n\r\n  const changeModal = () => {\r\n    dispatch(offCanvasAction());\r\n  };\r\n\r\n  return (\r\n    <Card\r\n      className={\r\n        offCanvas ? `${styles.card} ` + `${styles.active} ` : `${styles.card} `\r\n      }\r\n    >\r\n      {Object.keys(modalContent).length !== 0 ? (\r\n        <Container className={styles.container}>\r\n          <Image\r\n            src={modalContent.recipe.image}\r\n            style={{ maxWidth: \"300px\" }}\r\n            fluid\r\n          />\r\n          <Card.Body>\r\n            <Container className={styles.container}>\r\n              <h3>Calories</h3>\r\n              <Row>{modalContent.recipe.calories}</Row>\r\n            </Container>\r\n\r\n            <Container className={styles.container}>\r\n              <h3>totalWeight</h3>\r\n              <Row>{modalContent.recipe.totalWeight}</Row>\r\n            </Container>\r\n            <Mymappedarray\r\n              label=\"dietLabels\"\r\n              array={modalContent.recipe.dietLabels}\r\n            />\r\n            <Mymappedarray\r\n              label=\"dishType\"\r\n              array={modalContent.recipe.dishType}\r\n            />\r\n            <Mymappedarray\r\n              label=\"healthLabels\"\r\n              array={modalContent.recipe.healthLabels}\r\n            />\r\n            <Mymappedarray\r\n              label=\"ingredientLines\"\r\n              array={modalContent.recipe.ingredientLines}\r\n            />\r\n            <Mymappedarray\r\n              label=\"mealType\"\r\n              array={modalContent.recipe.mealType}\r\n            />\r\n\r\n            <Button\r\n              variant=\"primary\"\r\n              style={{ margin: \"30px\" }}\r\n              onClick={() => changeModal()}\r\n            >\r\n              Close\r\n            </Button>\r\n          </Card.Body>\r\n        </Container>\r\n      ) : (\r\n        <div>empty</div>\r\n      )}\r\n    </Card>\r\n  );\r\n}\r\n","export default class Utils {\r\n  static clearArrFromDuplicate = (arr) => {\r\n    if (arr) {\r\n      const strObj = arr.reduce((uniques, item) => {\r\n        const item02 = JSON.stringify(item)\r\n        return uniques.includes(item02) ? uniques : [...uniques, item02]\r\n      }, [])\r\n\r\n      return strObj.map((obj) => JSON.parse(obj))\r\n    }\r\n    return null\r\n  }\r\n\r\n  static checkStatus = (response) => {\r\n    if (response.status >= 200 && response.status < 300) {\r\n      return response\r\n    }\r\n    const error = new Error(response.statusText)\r\n\r\n    error.response = response\r\n    throw error\r\n  }\r\n\r\n  static parseJSON = (response) => {\r\n    return response.json()\r\n  }\r\n\r\n  static fetchJSON = (url) =>\r\n    fetch(url).then(this.checkStatus).then(this.parseJSON)\r\n}\r\n\r\n// 59CDafTnK5TeXMtpaRwlrBGoJJ0WoLciNEVfIe5z\r\n","import Utils from './Utils'\r\n\r\n// const API_ID = process.env.REACT_APP_RECIPE_ID;\r\n// const API_KEY = process.env.REACT_APP_RECIPE_KEY;\r\n\r\nconst API_ID = '84f08cc9'\r\nconst API_KEY = 'c9b68b5ed2f64ed600d5f3fa18b9652f'\r\n\r\nexport const searcRecipe = (value) =>\r\n  Utils.fetchJSON(\r\n    `https://api.edamam.com/search?q=${value}/&app_id=${API_ID}&app_key=${API_KEY}`\r\n  )\r\n","import React, { useCallback } from \"react\";\r\nimport { Card, Button, Image, Container } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { offCanvasAction, setModalAction } from \"../store/offCanvasReducer\";\r\n\r\nexport default function MyCard({ recipe }) {\r\n  const dispatch = useDispatch();\r\n  const modalContent = useSelector(\r\n    (state) => state.offCanvasReducer.modalContent\r\n  );\r\n\r\n  const changeModal = () => {\r\n    dispatch(offCanvasAction());\r\n    dispatch(setModalAction(recipe));\r\n  };\r\n\r\n  return (\r\n    <Card\r\n      style={{\r\n        alignItems: \"center\",\r\n        backgroundColor: \"#778899\",\r\n        padding: \"20px\",\r\n      }}\r\n    >\r\n      <Image src={recipe.recipe.image} style={{}} fluid />\r\n      <Card.Body>\r\n        <Card.Title>{recipe.recipe.label}</Card.Title>\r\n        <Container>\r\n          <h3>Ingridients</h3>\r\n          {recipe.recipe.ingredients.map((ingredient) => (\r\n            <div key={recipe.recipe.ingredients.indexOf(ingredient)}>\r\n              {ingredient.text}\r\n            </div>\r\n          ))}\r\n        </Container>\r\n\r\n        <Button\r\n          variant=\"primary\"\r\n          style={{ margin: \"30px\" }}\r\n          onClick={() => changeModal(recipe)}\r\n        >\r\n          Go to\r\n        </Button>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Carousel } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport MyCard from \"./MyCard\";\r\n\r\nexport default function RecipesCarusel() {\r\n  const dispatch = useDispatch();\r\n  const recipes = useSelector((state) => state.recipeReducer.recipes);\r\n\r\n  return (\r\n    <Carousel>\r\n      {recipes.map((item) => (\r\n        <Carousel.Item\r\n          style={{\r\n            textAlign: \"center\",\r\n          }}\r\n          key={item.recipe.image}\r\n        >\r\n          <MyCard recipe={item} />\r\n        </Carousel.Item>\r\n      ))}\r\n    </Carousel>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { ButtonGroup, Button } from \"react-bootstrap\";\r\n\r\nexport default function MyButton({ buttonText, buttonHandle, argument }) {\r\n  return (\r\n    <ButtonGroup>\r\n      <Button onClick={() => buttonHandle(argument)}>{buttonText}</Button>\r\n    </ButtonGroup>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { InputGroup, FormControl } from \"react-bootstrap\";\r\n\r\nexport default function MyInput({ inputName, value, inputHandle }) {\r\n  return (\r\n    <InputGroup size=\"sm\" className=\"mb-3\">\r\n      <InputGroup.Text id=\"inputGroup-sizing-sm\">{inputName}</InputGroup.Text>\r\n      <FormControl\r\n        value={value}\r\n        onChange={(e) => inputHandle(e)}\r\n        aria-label=\"Small\"\r\n        aria-describedby=\"inputGroup-sizing-sm\"\r\n      />\r\n    </InputGroup>\r\n  );\r\n}\r\n","import React, { useCallback } from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { showRecipesAction, changeRecipesName } from \"../store/recipeReducer\";\r\nimport { searcRecipe } from \"../API/recipes\";\r\nimport RecipesCarusel from \"./RecipesCarusel\";\r\nimport MyButton from \"./MyButton\";\r\nimport MyInput from \"./MyInput\";\r\n\r\nexport default function Recipes() {\r\n  const dispatch = useDispatch();\r\n  const recipes = useSelector((state) => state.recipeReducer.recipes);\r\n  const recipesName = useSelector((state) => state.recipeReducer.recipesName);\r\n\r\n  const getRecipes = useCallback((name) => {\r\n    searcRecipe(name).then((data) => {\r\n      console.log(data.hits);\r\n      dispatch(showRecipesAction(data.hits));\r\n      dispatch(changeRecipesName(\"\"));\r\n    });\r\n  }, []);\r\n\r\n  const changeRecipes = useCallback((e) => {\r\n    e.preventDefault();\r\n    dispatch(changeRecipesName(e.target.value));\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <Container style={{ margin: \"20px\" }}>\r\n        <Row style={{}}>\r\n          <Col>\r\n            <MyButton\r\n              buttonText=\"show recipes\"\r\n              buttonHandle={getRecipes}\r\n              argument={recipesName}\r\n            />\r\n          </Col>\r\n          <Col lg={8} md={6} sm={6} xs={6}>\r\n            <MyInput\r\n              inputName=\"Enter word\"\r\n              inputHandle={changeRecipes}\r\n              value={recipesName}\r\n            />\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n\r\n      <Container>\r\n        <Row>\r\n          {recipes.length > 0 ? (\r\n            <RecipesCarusel />\r\n          ) : (\r\n            <div style={{ textAlign: \"center\", padding: \"50px\" }}>\r\n              <h2 style={{ color: \"#DAA520\", fontWeight: \"bold\" }}>\r\n                Recipes did not found !\r\n              </h2>\r\n            </div>\r\n          )}\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\nimport Footer from \"./components/Footer\";\nimport Header from \"./components/Header\";\nimport OffcanvasCard from \"./components/OffcanvasCard\";\nimport Recipes from \"./components/Recipes\";\n\nfunction App() {\n  return (\n    <div style={{ backgroundColor: \"#778899\" }}>\n      <OffcanvasCard />\n      <Header />\n      <Recipes />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { store } from './store'\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nimport App from './App'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}